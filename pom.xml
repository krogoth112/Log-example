<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>LogExample</groupId>
	<artifactId>LogExample</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	
	<properties>
		<org.springframework-version>4.0.4.RELEASE</org.springframework-version>
		<jcloverslf4j.version>1.7.6</jcloverslf4j.version>		
		<logback.version>1.1.1</logback.version>
	</properties>

	<dependencies>
		<!-- spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<!--
			Spring, ibatis, myibatis, jdbc diriver library 들은
			보통 Apache의  (J)akarta (C)ommon (L)ogging을
			사용해서 로깅을 한다.
			
			우리는 SLF4J 기반의 Logback 라이브러리를 로거로
			사용할 것이기 때문에 common-logging 라이브러리는
			제외시킨다.
			
			
			[ 참고 ]  SLF4J 란
			자바에서는 common-logging 외에 log4J를 많이 사용하고
			있다.
			
			성능과 기능상 이유로 대체 로거들이 많이 나오면서 자바
			로거도 표준과 일관된 인터페이스가 필요했는데 그것이
			SLF4J이다.
			
			라이브러리가 아니라 Logging API를 정의해 놓았으며
			그 구현체가 우리가 써야 할 Logback 라이브러리이다. 
			
			[ 참고 ] apache common
			common- 이 붙은 라이브러리는 apache재단의 common 
			라이브러리 프로젝트의 결과물이다.
			[ http://ko.wikipedia.org/wiki/아파치_커먼즈 ]
			
			간단히, 자바개발에 많이 사용하는 공통 컴포넌트 라이브러리
			프로젝트의 그룹이다.[ https://commons.apache.org/ ]

			우리도 제외되긴 했지만 common-logging 외에 common-fileupload
			common-io 등을 사용하고 있다.
			-->
			<exclusions>
			   <exclusion>
				  <groupId>commons-logging</groupId>
				  <artifactId>commons-logging</artifactId>
			   </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>

		<!-- jstl -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<!-- Logback --> 
		<!-- 
			Jakarta Common Logging 라이브러리 제외 시켰기 때문에
			기존 Common Logging 를 통해 뿌려지는 로그정보를 slf4j
			로 연결해 줘야 하는 일종의 어댑터가 필요한데,
			그것이 jcl-over-slf4j 이다
		 -->
		<dependency>                                    
			<groupId>org.slf4j</groupId>                
			<artifactId>jcl-over-slf4j</artifactId>     
			<version>${jcloverslf4j.version}</version>  
		</dependency>
		<!--
			 slf4j 를 구현하고 있는 Logback 라이브러리이다.
		 -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		
	</dependencies>

	<build>
		<sourceDirectory>src</sourceDirectory>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<warSourceDirectory>webapp</warSourceDirectory>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>